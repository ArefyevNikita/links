worker_processes auto;
error_log /var/log/nginx/error.log notice;
pid /tmp/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Логирование
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    # Производительность
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Gzip сжатие
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json;

    server {
        listen 80;
        server_name _;
        root /usr/share/nginx/html;
        index index.html;

        # Безопасность
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;

        # Обслуживание статических файлов
        location /assets/ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # SPA routing - все запросы направляем на index.html
        location / {
            try_files $uri $uri/ /index.html;
            
            # Отключаем кеширование для index.html
            location = /index.html {
                add_header Cache-Control "no-cache, no-store, must-revalidate";
                add_header Pragma "no-cache";
                add_header Expires "0";
            }
        }

        # Swagger документация (должен быть первым для точного совпадения)
        location = /api {
            proxy_pass http://api:3001/api;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Swagger статические файлы
        location /api/swagger-ui.css {
            proxy_pass http://api:3001/api/swagger-ui.css;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
        }

        location /api/swagger-ui-bundle.js {
            proxy_pass http://api:3001/api/swagger-ui-bundle.js;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
        }

        location /api/swagger-ui-standalone-preset.js {
            proxy_pass http://api:3001/api/swagger-ui-standalone-preset.js;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
        }

        location /api/swagger-ui-init.js {
            proxy_pass http://api:3001/api/swagger-ui-init.js;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
        }

        location ~ /api/favicon-.*\.png$ {
            proxy_pass http://api:3001$request_uri;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
        }

        # JSON спецификация Swagger
        location /api-json {
            proxy_pass http://api:3001/api-json;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
        }

        # Проксирование API запросов к backend (должно быть после точных совпадений)
        location /api/ {
            proxy_pass http://api:3001/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        # Проксирование редиректов (они должны работать напрямую)
        location /r/ {
            proxy_pass http://api:3001/r/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Healthcheck
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
}
